--In this SQL, I'm querying a database with multiple tables to quantify statistics about customers/artists and other data.



--Show customers  fullnames, customer ID, and country (who are not in the US)
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'USA';

--Show only the Customers from Brazil
SELECT *
FROM chinook.customers
WHERE Country  = 'Brazil';

--Invocies of customers who are from Brazil
SELECT Customer.FirstName, Customer.LastName, invoices.InvoiceId, invoices.InvoiceDate ,
invoices.BillingCountry
FROM chinook.customers AS Customer
LEFT JOIN chinook.invoices AS invoices
ON Customer.CustomerID = invoices.CustomerId;

--Employees who are Sales Agents
SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

--Unique list of billing countries from the invoice table
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

--Provide a query that shows the invoices associated with each sales agent.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId
FROM chinook.employees AS employees
JOIN chinook.customers AS customers
ON employees.EmployeeId = customers.SupportRepId
JOIN chinook.invoices AS invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent';

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers
SELECT employees.LastName, employees.FirstName, customers.LastName, 
customers.FirstName, invoices.Total, customers.Country
FROM chinook.customers customers
JOIN chinook.employees employees
ON customers.SupportRepId = employees.EmployeeId
JOIN chinook.invoices invoices
ON customers.CustomerId = invoices.CustomerId;

--Total number of invoices in 2009
SELECT COUNT(*) AS Invoices_2009
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

--Total sales for 2009
SELECT ROUND(SUM(total),2) AS total_sales
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

--Purchased track name with each invoice line ID
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM chinook.tracks tracks
JOIN chinook.invoice_items invoice_items
ON tracks.TrackId = invoice_items.TrackId;

--Purchased track name and artist name with each invoice line ID
SELECT artists.Name, tracks.Name, invoice_items.InvoiceLineId
FROM chinook.tracks tracks
JOIN chinook.invoice_items invoice_items
ON tracks.TrackId = invoice_items.TrackId
JOIN chinook.albums albums
ON tracks.AlbumId = albums.AlbumId
JOIN chinook.artists artists
ON albums.ArtistId = artists.ArtistId;

--Tracks, album name,, media type, genre
SELECT albums.Title album_name, tracks.Name track_name, 
media_types.Name media_type_name, genres.Name genre_name
FROM chinook.albums albums
JOIN chinook.tracks tracks
ON albums.AlbumId = tracks.AlbumId
JOIN chinook.media_types media_types
ON tracks.MediaTypeId = media_types.MediaTypeId
JOIN chinook.genres genres
ON tracks.GenreId = genres.GenreId;

--total sales made by each sales agent
SELECT employees.LastName, employees.FirstName, ROUND(SUM(invoices.Total),2) total_sales
FROM chinook.employees employees
JOIN chinook.customers customers
ON employees.EmployeeId = customers.SupportRepId
JOIN chinook.invoices invoices
ON customers.CustomerId = invoices.CustomerId
GROUP BY 1,2;


--Which sales agent made the most dollars in sales in 2009?
SELECT employees.LastName, employees.FirstName, ROUND(SUM(invoices.Total),2) AS Total_sales
FROM chinook.employees employees
JOIN chinook.customers customers
ON employees.EmployeeId = customers.SupportRepId
JOIN chinook.invoices invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
GROUP BY 1,2
ORDER BY 3 DESC;

--Playlists with name of tracks
SELECT Playlists.Name, tracks.Name
FROM chinook.playlist_track playlist_track
JOIN chinook.tracks tracks
ON playlist_track.TrackId = tracks.TrackId
JOIN chinook.playlists playlists
ON playlist_track.PlaylistId = playlists.PlaylistId
ORDER BY playlists.Name;

--What genre has the most tracks
SELECT genres.Name, COUNT(tracks.TrackId)
FROM chinook.genres genres
JOIN chinook.tracks tracks 
ON genres.GenreId = tracks.GenreId
GROUP BY 1
ORDER BY 2 DESC;

--Favorite genre is rock and second favorite is pop? create a label that differentiates between the two and the rest as 'nah'
SELECT genres.Name, tracks.Name,
CASE
    WHEN genres.Name = 'Rock' THEN 'Favorite genre'
    WHEN genres.Name = 'Electronica/Dance' THEN 'Favorite dancing music'
    WHEN genres.Name = 'Comedy' THEN 'Favorite Tv genre'
    ELSE 'ehh'
    END AS favorite_label
FROM chinook.genres genres
LEFT JOIN chinook.tracks tracks
ON genres.GenreId = tracks.GenreId;

--Which artist has the most albums?
SELECT artists.Name, COUNT(albums.AlbumId) AS Number_albums
FROM chinook.albums albums
JOIN chinook.artists artists
ON albums.ArtistId = artists.ArtistId
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

--What is the most amount of money spent in one order?
SELECT invoiceID, SUM(total) AS total_amount_spent
FROM chinook.invoices
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

--What state(s) have the least amount of sales in the united states?
SELECT customers.State, ROUND(SUM(invoices.Total),2) AS total_sales
FROM chinook.customers customers
LEFT JOIN chinook.invoices invoices
ON customers.CustomerId = invoices.CustomerId
WHERE customers.State <> 'NULL' AND customers.Country LIKE 'USA'
GROUP BY 1
ORDER BY 2
LIMIT 4;

--Which artist brought in the most money?
SELECT artists.Name, ROUND(SUM(invoices.Total),2) AS total_sales
FROM chinook.invoice_items invoice_items
JOIN chinook.invoices invoices
ON invoice_items.InvoiceId = invoices.InvoiceId
JOIN chinook.tracks tracks
ON invoice_items.TrackId = tracks.TrackId
JOIN chinook.albums albums
ON tracks.AlbumId = albums.AlbumId
JOIN chinook.artists artists
ON albums.ArtistId = artists.ArtistId
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

--Which artist brought in the least money?
SELECT artists.Name, ROUND(SUM(invoices.Total),2) AS total_sales
FROM chinook.invoice_items invoice_items
JOIN chinook.invoices invoices
ON invoice_items.InvoiceId = invoices.InvoiceId
JOIN chinook.tracks tracks
ON invoice_items.TrackId = tracks.TrackId
JOIN chinook.albums albums
ON tracks.AlbumId = albums.AlbumId
JOIN chinook.artists artists
ON albums.ArtistId = artists.ArtistId
GROUP BY 1
ORDER BY 2
LIMIT 1;

--What are the different positions that the employees hold?
SELECT DISTINCT title
FROM chinook.employees;

--What position has the most employees?
SELECT title, COUNT(title) AS Number_of_employees
FROM chinook.employees
GROUP BY 1
ORDER BY 2 DESC;

--What date were all employees hired?
SELECT LastName, FirstName, hiredate
FROM chinook.employees;


